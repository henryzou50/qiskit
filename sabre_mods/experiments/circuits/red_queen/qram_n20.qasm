OPENQASM 2.0;
include "qelib1.inc";
qreg addr[3];
qreg rout[8];
qreg ram[8];
qreg qout[1];
creg cout[4];
u(pi,0,pi) addr[1];
u(pi/2,0,pi) rout[0];
u(pi/2,0,pi) rout[1];
u(pi/2,0,pi) rout[2];
cx addr[0],rout[3];
u(pi/2,0,pi) rout[4];
u(pi/2,0,pi) rout[5];
u(pi/2,0,pi) rout[6];
u(pi,0,pi) rout[7];
cx rout[3],rout[7];
cx rout[3],rout[1];
u(0,0,-pi/4) rout[1];
cx addr[1],rout[1];
u(0,0,pi/4) rout[1];
cx rout[3],rout[1];
u(0,0,-pi/4) rout[1];
cx addr[1],rout[1];
u(pi/2,0,-3*pi/4) rout[1];
u(0,0,pi/4) rout[3];
cx addr[1],rout[3];
u(0,0,pi/4) addr[1];
u(0,0,-pi/4) rout[3];
cx addr[1],rout[3];
cx rout[1],rout[3];
cx rout[1],rout[0];
u(0,0,-pi/4) rout[0];
cx addr[2],rout[0];
u(0,0,pi/4) rout[0];
cx rout[1],rout[0];
u(0,0,-pi/4) rout[0];
cx addr[2],rout[0];
u(pi/2,0,-3*pi/4) rout[0];
u(0,0,pi/4) rout[1];
cx addr[2],rout[1];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[1];
cx addr[2],rout[1];
cx rout[0],rout[1];
cx rout[3],rout[2];
u(0,0,-pi/4) rout[2];
cx addr[2],rout[2];
u(0,0,pi/4) rout[2];
cx rout[3],rout[2];
u(0,0,-pi/4) rout[2];
cx addr[2],rout[2];
u(pi/2,0,-3*pi/4) rout[2];
u(0,0,pi/4) rout[3];
cx addr[2],rout[3];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[3];
cx addr[2],rout[3];
cx rout[2],rout[3];
cx rout[7],rout[5];
u(0,0,-pi/4) rout[5];
cx addr[1],rout[5];
u(0,0,pi/4) rout[5];
cx rout[7],rout[5];
u(0,0,-pi/4) rout[5];
cx addr[1],rout[5];
u(pi/2,0,-3*pi/4) rout[5];
u(0,0,pi/4) rout[7];
cx addr[1],rout[7];
u(0,0,pi/4) addr[1];
u(0,0,-pi/4) rout[7];
cx addr[1],rout[7];
cx rout[5],rout[7];
cx rout[5],rout[4];
u(0,0,-pi/4) rout[4];
cx addr[2],rout[4];
u(0,0,pi/4) rout[4];
cx rout[5],rout[4];
u(0,0,-pi/4) rout[4];
cx addr[2],rout[4];
u(pi/2,0,-3*pi/4) rout[4];
u(0,0,pi/4) rout[5];
cx addr[2],rout[5];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[5];
cx addr[2],rout[5];
cx rout[4],rout[5];
cx rout[7],rout[6];
u(0,0,-pi/4) rout[6];
cx addr[2],rout[6];
u(0,0,pi/4) rout[6];
cx rout[7],rout[6];
u(0,0,-pi/4) rout[6];
cx addr[2],rout[6];
u(pi/2,0,-3*pi/4) rout[6];
u(0,0,pi/4) rout[7];
cx addr[2],rout[7];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[7];
cx addr[2],rout[7];
cx rout[6],rout[7];
u(pi,0,pi) ram[0];
u(pi,0,pi) ram[2];
u(pi,0,pi) ram[7];
u(pi/2,0,pi) qout[0];
cx ram[7],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[7],qout[0];
u(0,0,pi/4) qout[0];
cx ram[7],qout[0];
u(0,0,pi/4) ram[7];
u(0,0,-pi/4) qout[0];
cx rout[7],qout[0];
cx rout[7],ram[7];
u(0,0,pi/4) rout[7];
u(0,0,-pi/4) ram[7];
cx rout[7],ram[7];
u(0,1.4065829705916295,-0.6211848071941821) qout[0];
cx ram[6],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[6],qout[0];
u(0,0,pi/4) qout[0];
cx ram[6],qout[0];
u(0,0,pi/4) ram[6];
u(0,0,-pi/4) qout[0];
cx rout[6],qout[0];
cx rout[6],ram[6];
u(0,0,pi/4) rout[6];
u(0,0,-pi/4) ram[6];
cx rout[6],ram[6];
cx rout[6],rout[7];
u(pi/2,0,pi) rout[6];
cx rout[7],rout[6];
u(0,0,-pi/4) rout[6];
cx addr[2],rout[6];
u(0,0,pi/4) rout[6];
cx rout[7],rout[6];
u(0,0,-pi/4) rout[6];
cx addr[2],rout[6];
u(pi/2,0,-3*pi/4) rout[6];
u(0,0,pi/4) rout[7];
cx addr[2],rout[7];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[7];
cx addr[2],rout[7];
u(0,1.4065829705916295,-0.6211848071941821) qout[0];
cx ram[5],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[5],qout[0];
u(0,0,pi/4) qout[0];
cx ram[5],qout[0];
u(0,0,pi/4) ram[5];
u(0,0,-pi/4) qout[0];
cx rout[5],qout[0];
cx rout[5],ram[5];
u(0,0,pi/4) rout[5];
u(0,0,-pi/4) ram[5];
cx rout[5],ram[5];
u(0,1.4065829705916295,-0.6211848071941821) qout[0];
cx ram[4],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[4],qout[0];
u(0,0,pi/4) qout[0];
cx ram[4],qout[0];
u(0,0,pi/4) ram[4];
u(0,0,-pi/4) qout[0];
cx rout[4],qout[0];
cx rout[4],ram[4];
u(0,0,pi/4) rout[4];
u(0,0,-pi/4) ram[4];
cx rout[4],ram[4];
cx rout[4],rout[5];
u(pi/2,0,pi) rout[4];
cx rout[5],rout[4];
u(0,0,-pi/4) rout[4];
cx addr[2],rout[4];
u(0,0,pi/4) rout[4];
cx rout[5],rout[4];
u(0,0,-pi/4) rout[4];
cx addr[2],rout[4];
u(pi/2,0,-3*pi/4) rout[4];
u(0,0,pi/4) rout[5];
cx addr[2],rout[5];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[5];
cx addr[2],rout[5];
cx rout[5],rout[7];
u(pi/2,0,pi) rout[5];
cx rout[7],rout[5];
u(0,0,-pi/4) rout[5];
cx addr[1],rout[5];
u(0,0,pi/4) rout[5];
cx rout[7],rout[5];
u(0,0,-pi/4) rout[5];
cx addr[1],rout[5];
u(pi/2,0,-3*pi/4) rout[5];
u(0,0,pi/4) rout[7];
cx addr[1],rout[7];
u(0,0,pi/4) addr[1];
u(0,0,-pi/4) rout[7];
cx addr[1],rout[7];
u(0,1.4065829705916295,-0.6211848071941821) qout[0];
cx ram[3],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[3],qout[0];
u(0,0,pi/4) qout[0];
cx ram[3],qout[0];
u(0,0,pi/4) ram[3];
u(0,0,-pi/4) qout[0];
cx rout[3],qout[0];
cx rout[3],ram[3];
u(0,0,pi/4) rout[3];
u(0,0,-pi/4) ram[3];
cx rout[3],ram[3];
u(0,1.4065829705916295,-0.6211848071941821) qout[0];
cx ram[2],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[2],qout[0];
u(0,0,pi/4) qout[0];
cx ram[2],qout[0];
u(0,0,pi/4) ram[2];
u(0,0,-pi/4) qout[0];
cx rout[2],qout[0];
cx rout[2],ram[2];
u(0,0,pi/4) rout[2];
u(0,0,-pi/4) ram[2];
cx rout[2],ram[2];
cx rout[2],rout[3];
u(pi/2,0,pi) rout[2];
cx rout[3],rout[2];
u(0,0,-pi/4) rout[2];
cx addr[2],rout[2];
u(0,0,pi/4) rout[2];
cx rout[3],rout[2];
u(0,0,-pi/4) rout[2];
cx addr[2],rout[2];
u(pi/2,0,-3*pi/4) rout[2];
u(0,0,pi/4) rout[3];
cx addr[2],rout[3];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[3];
cx addr[2],rout[3];
u(0,1.4065829705916295,-0.6211848071941821) qout[0];
cx ram[1],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[1],qout[0];
u(0,0,pi/4) qout[0];
cx ram[1],qout[0];
u(0,0,pi/4) ram[1];
u(0,0,-pi/4) qout[0];
cx rout[1],qout[0];
cx rout[1],ram[1];
u(0,0,pi/4) rout[1];
u(0,0,-pi/4) ram[1];
cx rout[1],ram[1];
u(0,1.4065829705916295,-0.6211848071941821) qout[0];
cx ram[0],qout[0];
u(0,0,-pi/4) qout[0];
cx rout[0],qout[0];
u(0,0,pi/4) qout[0];
cx ram[0],qout[0];
u(0,0,pi/4) ram[0];
u(0,0,-pi/4) qout[0];
cx rout[0],qout[0];
cx rout[0],ram[0];
u(0,0,pi/4) rout[0];
u(0,0,-pi/4) ram[0];
cx rout[0],ram[0];
cx rout[0],rout[1];
u(pi/2,0,pi) rout[0];
cx rout[1],rout[0];
u(0,0,-pi/4) rout[0];
cx addr[2],rout[0];
u(0,0,pi/4) rout[0];
cx rout[1],rout[0];
u(0,0,-pi/4) rout[0];
cx addr[2],rout[0];
u(pi/2,0,-3*pi/4) rout[0];
u(0,0,pi/4) rout[1];
cx addr[2],rout[1];
u(0,0,pi/4) addr[2];
u(0,0,-pi/4) rout[1];
cx addr[2],rout[1];
cx rout[1],rout[3];
u(pi/2,0,pi) rout[1];
cx rout[3],rout[1];
u(0,0,-pi/4) rout[1];
cx addr[1],rout[1];
u(0,0,pi/4) rout[1];
cx rout[3],rout[1];
u(0,0,-pi/4) rout[1];
cx addr[1],rout[1];
u(pi/2,0,-3*pi/4) rout[1];
u(0,0,pi/4) rout[3];
cx addr[1],rout[3];
u(0,0,pi/4) addr[1];
u(0,0,-pi/4) rout[3];
cx addr[1],rout[3];
cx rout[3],rout[7];
cx addr[0],rout[3];
u(pi/2,0,-3*pi/4) qout[0];
measure addr[0] -> cout[0];
measure addr[1] -> cout[1];
measure addr[2] -> cout[2];
measure qout[0] -> cout[3];
